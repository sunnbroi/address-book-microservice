<?php
namespace App\Services;

use App\DTO\Message\StoreMessageDTO;
use App\Models\Message;
use App\Models\Recipient;
use Illuminate\Support\Facades\DB;
use App\Jobs\SendMessageJob;
class MessageService
{
    public function createAndDispatch(StoreMessageDTO $dto): Message
{
    \Log::info('üîß [Step 1] –ù–∞—á–∞–ª–æ –º–µ—Ç–æ–¥–∞ createAndDispatch()', ['dto' => $dto]);

    return DB::transaction(function () use ($dto) {
        // 1. –°–æ–∑–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        \Log::info('üîß [Step 2] –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');

        $message = Message::create([
            'address_book_id' => $dto->addressBookId,
            'text' => $dto->text,
        ]);

        \Log::info('‚úÖ [Step 2] –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ', ['message_id' => $message->id]);

        // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥—Ä–µ—Å–∞—Ç–æ–≤ –∫–Ω–∏–≥–∏
        \Log::info('üîß [Step 3] –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å–∞—Ç–æ–≤');

        $recipients = Recipient::query()
            ->where('address_book_id', $dto->addressBookId)
            ->whereNull('blocked_at')
            ->get();

        \Log::info('‚úÖ [Step 3] –ê–¥—Ä–µ—Å–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã', ['count' => $recipients->count()]);

        // 3. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å
        foreach ($recipients as $recipient) {
            \Log::info('üì¶ [Step 4] –°–æ–∑–¥–∞—ë–º –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É', [
                'recipient_id' => $recipient->id,
                'message_id' => $message->id,
            ]);

            dispatch(new SendMessageJob($message, $recipient));
        }

        \Log::info('‚úÖ [Step 5] –í—Å–µ –∑–∞–¥–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã');

        return $message;
    });
}
}